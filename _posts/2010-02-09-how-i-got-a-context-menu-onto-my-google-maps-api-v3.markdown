---
layout: post
title: "How I got a context menu onto my Google Maps API V3"
date: 2010-02-09 00:34:00
comments: true
categories: 
---

<p>I have a <a href="http://www.jquery.com">jquery</a> context menu plug-in that I have been using for a while.&nbsp; As things go the context menu is attached to the relevant element (my map <span style="font-family: courier new,courier;">div</span>) like so:</p>
<p><span style="font-size: x-small;"><span style="font-family: courier new,courier;">$('#map-canvas').contextMenu('context-menu', <em>{options}</em>);</span></span></p>
<p>This is all good-and-well except that when the map is rendered all kinds of magic happens that basically means my context menu is never displayed.&nbsp; This is in all likelihood because the Google Maps populates the map canvas div with elements that obvious <em>do not</em> have my context menu attached.</p>
<p>So the approach I took was to somehow tell the context menu to pop up where I need it.&nbsp; But then I couldn't find a context menu that had a simple <span style="font-family: courier new,courier;">Show</span> or <span style="font-family: courier new,courier;">Display</span> or <span style="font-family: courier new,courier;">PopUp</span> method (maybe I just missed it).&nbsp; So the next step was to trigger the 'contexmenu' event on the <span style="font-family: courier new,courier;">map-canvas</span> div.</p>
<p>First I needed to add an event listener for the <span style="font-family: courier new,courier;">rightclick</span> event on the map that would call the <span style="font-family: courier new,courier;">openContextMenu</span> function.&nbsp; However, the event object passed to the function by Google Maps is a <span style="font-family: courier new,courier;">MouseEvent</span> class.&nbsp; This only has a <span style="font-family: courier new,courier;">latLng</span> property specifying the latitude and longitude.&nbsp; From this I needed to get the XY pixel coordinates.&nbsp; Fortunately there is a <span style="font-family: courier new,courier;">MapCanvasProjection</span> object that can return a <span style="font-family: courier new,courier;">Point</span> from the <code>fromLatLngToContainerPixel </code>method.&nbsp; Unfortunately the <span style="font-family: courier new,courier;">MapCanvasProjection</span> object cannot be returned from the map but rather from an overlay.&nbsp; So after some googling I found a bit of code on StackOverflow that does just that.</p>
<p>If anyone has a more elegant way to achieve the same thing please let me know.</p>
<p>Here is the complete code:</p>
<p><span style="font-family: courier new,courier;">var map;<br />var mapOverlay;<br />var contextMenuEvent;<br /><br />$(document).ready(function() {<br />&nbsp;&nbsp;&nbsp; var sw = new google.maps.LatLng(-34.80, 16.43);<br />&nbsp;&nbsp;&nbsp; var ne = new google.maps.LatLng(-22.06, 32.75);<br />&nbsp;&nbsp;&nbsp; var bounds = new google.maps.LatLngBounds(sw, ne);<br /><br />&nbsp;&nbsp;&nbsp; map = new google.maps.Map($("#map-canvas").get(0), { mapTypeId: google.maps.MapTypeId.ROADMAP });<br /><br />&nbsp;&nbsp;&nbsp; map.setCenter(bounds.getCenter());<br />&nbsp;&nbsp;&nbsp; map.fitBounds(bounds);<br />&nbsp;&nbsp;&nbsp; map.enableKeyDragZoom();<br /><br />&nbsp;&nbsp;&nbsp; mapOverlay = new MapOverlay(map);<br /><br />&nbsp;&nbsp;&nbsp; google.maps.event.addListener(map, "rightclick", openContextMenu);<br /><br />&nbsp;&nbsp;&nbsp; $.contextMenu.defaults(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; menuStyle:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; width: '200px'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br /><br />&nbsp;&nbsp;&nbsp; $('#map-canvas').contextMenu('context-menu', {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bindings:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'context-menu-zoom-in': function(trigger) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map.setZoom(map.getZoom() + 1);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'context-menu-zoom-out': function(trigger) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map.setZoom(map.getZoom() - 1);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'context-menu-center-map': function(trigger) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map.setCenter(contextMenuEvent.latLng);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; });<br />});<br /><br />function openContextMenu(e) {<br />&nbsp;&nbsp;&nbsp; var ev = new jQuery.Event('contextmenu');<br /><br />&nbsp;&nbsp;&nbsp; var p = mapOverlay.getProjection().fromLatLngToContainerPixel(e.latLng);<br /><br />&nbsp;&nbsp;&nbsp; ev.pageX = p.x;<br />&nbsp;&nbsp;&nbsp; ev.pageY = p.y;<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; contextMenuEvent = e;<br /><br />&nbsp;&nbsp;&nbsp; $('#map-canvas').trigger(ev, [e.latLng]);<br />}<br /><br />MapOverlay.prototype = new google.maps.OverlayView();<br />MapOverlay.prototype.onAdd = function() { }<br />MapOverlay.prototype.onRemove = function() { }<br />MapOverlay.prototype.draw = function() { }<br /><br />function MapOverlay(map) { this.setMap(map); }<br /></span></p>